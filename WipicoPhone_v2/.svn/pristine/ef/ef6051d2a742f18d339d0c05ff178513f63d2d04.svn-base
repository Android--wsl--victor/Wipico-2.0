package com.chinasvc.wipicophone.adapter;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import android.annotation.SuppressLint;
import android.content.Context;
import android.graphics.drawable.AnimationDrawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.ImageView;
import android.widget.SectionIndexer;
import android.widget.TextView;

import com.chinasvc.wipicophone.R;
import com.chinasvc.wipicophone.bean.AudioBean;
import com.chinasvc.wipicophone.util.AlphComparator;
import com.chinasvc.wipicophone.util.MultimediaUtil;

@SuppressLint("DefaultLocale")
public class AudioPlayerAdapter extends BaseAdapter implements SectionIndexer {

	private List<AudioBean> listDatas = null;
	private Context mContext;

	private AnimationDrawable mPeakOneAnimation, mPeakTwoAnimation;

	public List<AudioBean> listSelects = new ArrayList<AudioBean>();

	public boolean isCheckedMode = false;
	public boolean isPlay = false;

	public AudioPlayerAdapter(Context mContext, List<AudioBean> list, boolean isPlay) {
		this.mContext = mContext;
		this.listDatas = list;
		AlphComparator comparator = new AlphComparator();
		Collections.sort(this.listDatas, comparator);
		isCheckedMode = false;
		this.isPlay = isPlay;
		listSelects.clear();
	}

	public int getCount() {
		return this.listDatas.size();
	}

	public Object getItem(int position) {
		return null;
	}

	public long getItemId(int position) {
		return position;
	}

	public View getView(final int position, View view, ViewGroup arg2) {
		ViewHolder viewHolder = null;
		if (view == null) {
			viewHolder = new ViewHolder();
			view = LayoutInflater.from(mContext).inflate(R.layout.listview_items, null);
			viewHolder.tvTitle = (TextView) view.findViewById(R.id.listview_item_line_one);
			viewHolder.duration = (TextView) view.findViewById(R.id.listview_item_line_two);

			viewHolder.tvLetter = (TextView) view.findViewById(R.id.catalog);
			viewHolder.peak_one = (ImageView) view.findViewById(R.id.peak_one);
			viewHolder.peak_two = (ImageView) view.findViewById(R.id.peak_two);
			viewHolder.checkBox = (CheckBox) view.findViewById(R.id.checkBox);
			view.setTag(viewHolder);
		} else {
			viewHolder = (ViewHolder) view.getTag();
		}
		final AudioBean bean = listDatas.get(position);

		viewHolder.checkBox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
			@Override
			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
				// TODO Auto-generated method stub
				if (isChecked) {
					listDatas.get(position).setChecked(true);
					listSelects.add(bean);
				} else {
					listDatas.get(position).setChecked(false);
					listSelects.remove(bean);
				}
			}
		});

		if (isCheckedMode) {
			viewHolder.checkBox.setVisibility(View.VISIBLE);
		} else {
			viewHolder.checkBox.setVisibility(View.GONE);
		}

		if (position == 0) {
			viewHolder.tvLetter.setVisibility(View.VISIBLE);
			viewHolder.tvLetter.setText(bean.getLetter());
		} else {
			String lastCatalog = listDatas.get(position - 1).getLetter();
			if (bean.getLetter().equals(lastCatalog)) {
				viewHolder.tvLetter.setVisibility(View.GONE);
			} else {
				viewHolder.tvLetter.setVisibility(View.VISIBLE);
				viewHolder.tvLetter.setText(bean.getLetter());
			}
		}

		if (isPlay) {
			if (bean.getPlayState() == AudioBean.PlayState.PLAYING) {
				viewHolder.peak_one.setImageResource(R.anim.peak_meter_1);
				viewHolder.peak_two.setImageResource(R.anim.peak_meter_2);
				mPeakOneAnimation = (AnimationDrawable) viewHolder.peak_one.getDrawable();
				mPeakTwoAnimation = (AnimationDrawable) viewHolder.peak_two.getDrawable();
				mPeakOneAnimation.start();
				mPeakTwoAnimation.start();
			} else if (bean.getPlayState() == AudioBean.PlayState.PAUSE) {
				viewHolder.peak_one.setImageResource(R.anim.peak_meter_1);
				viewHolder.peak_two.setImageResource(R.anim.peak_meter_2);
				mPeakOneAnimation = (AnimationDrawable) viewHolder.peak_one.getDrawable();
				mPeakTwoAnimation = (AnimationDrawable) viewHolder.peak_two.getDrawable();
				mPeakOneAnimation.stop();
				mPeakTwoAnimation.stop();
			} else {
				viewHolder.peak_one.setImageResource(0);
				viewHolder.peak_two.setImageResource(0);
			}
		} else {
			viewHolder.peak_one.setVisibility(View.GONE);
			viewHolder.peak_two.setVisibility(View.GONE);
		}

		viewHolder.tvTitle.setText(bean.getName());
		viewHolder.duration.setText(MultimediaUtil.showTime(bean.getDuration()));
		return view;
	}

	final static class ViewHolder {
		ImageView image;//

		ImageView peak_one;
		ImageView peak_two;

		TextView tvLetter;// 字母

		TextView tvTitle;// 标题
		TextView duration;// 时长

		CheckBox checkBox;
	}

	public Object[] getSections() {
		return null;
	}

	public int getSectionForPosition(int position) {
		return 0;
	}

	public int getPositionForSection(int section) {
		AudioBean bean;
		String l;
		if (section == '#') {
			return 0;
		} else {
			for (int i = 0; i < getCount(); i++) {
				bean = (AudioBean) listDatas.get(i);
				l = bean.getLetter();
				char firstChar = l.toUpperCase().charAt(0);
				if (firstChar == section) {
					return i;
				}
			}
		}
		bean = null;
		l = null;
		return -1;
	}

}